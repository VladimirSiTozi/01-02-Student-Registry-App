# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  security_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Clone the GitHub Repo on the machine
      uses: actions/checkout@v4

    - name: Use Node.js version 20
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install program dependacies
      run: npm install

    - name: Run npm security tests 
      run: npm audit

  build_test:
    runs-on: ubuntu-latest
    needs: security_tests # if security_tests is successful

    # strategy:
    #   matrix:
    #     node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Clone the GitHub Repo on the machine
      uses: actions/checkout@v4
    - name: Use Node.js version 20
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install program dependacies
      run: npm install
    - name: Start the App
      run: npm run start &

    - name: Run integration tests and save output
      run: npm run test | tee test-output.log

    - name: Upload test output as artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-output.log

    # - name: Run integration tests
    #   run: npm run test

  # # 2nd github deploy action
  deploy:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v3
      - uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          wait_deploy: true


    # # 1st github deploy action
    # runs-on: ubuntu-latest
    # needs: build_test
    # steps:
    #   - name: Deploy to production
    #     uses: johnbeynon/render-deploy-action@v0.0.8
    #     with:
    #       service-id: ${{ secrets.RENDER_API_KEY }}
    #       api-key: ${{ secrets.RENDER_SERVICE_ID }}
    #       wait-for-success: true
